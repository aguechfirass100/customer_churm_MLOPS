name: Python CI/CD

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests
        run: |
          PYTHONPATH=$(pwd) pytest tests/

  build-and-push:
    runs-on: ubuntu-latest
    # needs: test  # Only run if tests pass
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/mlops-app:latest

  notify:
    runs-on: ubuntu-latest
    needs: [test, build-and-push]
    if: always()
    steps:
      - name: Send success email notification
        if: success()
        run: |
          curl -X POST "https://api.mailjet.com/v3.1/send" \
          -H "Content-Type: application/json" \
          -u "${{ secrets.MAILJET_API_KEY }}:${{ secrets.MAILJET_API_SECRET }}" \
          -d '{
                "Messages": [{
                  "From": {
                    "Email": "${{ secrets.EMAIL_SENDER }}",
                    "Name": "GitHub Actions"
                  },
                  "To": [{
                    "Email": "${{ secrets.EMAIL_RECIPIENT2 }}",
                    "Name": "Firas Aguech"
                  }],
                  "Subject": "GitHub Actions Workflow Status: Success",
                  "TextPart": "Tests passed, and the Docker image was successfully built and pushed!"
                }]
              }'

      - name: Send failure email notification
        if: failure()
        run: |
          curl -X POST "https://api.mailjet.com/v3.1/send" \
          -H "Content-Type: application/json" \
          -u "${{ secrets.MAILJET_API_KEY }}:${{ secrets.MAILJET_API_SECRET }}" \
          -d '{
                "Messages": [{
                  "From": {
                    "Email": "${{ secrets.EMAIL_SENDER }}",
                    "Name": "GitHub Actions"
                  },
                  "To": [{
                    "Email": "${{ secrets.EMAIL_RECIPIENT2 }}",
                    "Name": "Firas Aguech"
                  }],
                  "Subject": "GitHub Actions Workflow Status: Failure",
                  "TextPart": "Tests failed, or the Docker build/push process encountered an error."
                }]
              }'
















# name: Python CI

# on:
#   push:
#     branches: [main]
#   pull_request:
#     branches: [main]

# jobs:
#   test:
#     runs-on: ubuntu-latest
    
#     steps:
#       # Checkout the code
#       - name: Checkout code
#         uses: actions/checkout@v2

#       # Set up Python
#       - name: Set up Python
#         uses: actions/setup-python@v2
#         with:
#           python-version: 3.8

#       # Install dependencies
#       - name: Install dependencies
#         run: |
#           python -m pip install --upgrade pip
#           pip install -r requirements.txt

#       # Run tests
#       - name: Run tests
#         run: |
#           PYTHONPATH=$(pwd) pytest tests/

#   notify:
#     runs-on: ubuntu-latest
#     needs: test
#     if: always()  # Always send an email, even if tests fail
#     steps:
#       - name: Send success email notification
#         if: success()  # Only send an email if the tests pass
#         run: |
#           curl -X POST "https://api.mailjet.com/v3.1/send" \
#           -H "Content-Type: application/json" \
#           -u "${{ secrets.MAILJET_API_KEY }}:${{ secrets.MAILJET_API_SECRET }}" \
#           -d '{
#                 "Messages": [{
#                   "From": {
#                     "Email": "${{ secrets.EMAIL_SENDER }}",
#                     "Name": "GitHub Actions"
#                   },
#                   "To": [{
#                     "Email": "${{ secrets.EMAIL_RECIPIENT2 }}",
#                     "Name": "Firas Aguech"
#                   }],
#                   "Subject": "GitHub Actions Workflow Status: Success",
#                   "TextPart": "The GitHub Actions workflow has successfully completed with all tests passing."
#                 }]
#               }'

#       - name: Send failure email notification
#         if: failure()  # Only send an email if the tests failed
#         run: |
#           curl -X POST "https://api.mailjet.com/v3.1/send" \
#           -H "Content-Type: application/json" \
#           -u "${{ secrets.MAILJET_API_KEY }}:${{ secrets.MAILJET_API_SECRET }}" \
#           -d '{
#                 "Messages": [{
#                   "From": {
#                     "Email": "${{ secrets.EMAIL_SENDER }}",
#                     "Name": "GitHub Actions"
#                   },
#                   "To": [{
#                     "Email": "${{ secrets.EMAIL_RECIPIENT2 }}",
#                     "Name": "Firas Aguech"
#                   }],
#                   "Subject": "GitHub Actions Workflow Status: Failure",
#                   "TextPart": "The GitHub Actions workflow has failed. Please check the logs for details."
#                 }]
#               }'
