version: "3.8"
services:
  fastapi:
    build: .
    container_name: fastapi_app
    ports:
      - "8000:8000"
    environment:
      - MONGO_URI=mongodb://mongodb:27017
      - MLFLOW_TRACKING_URI=http://mlflow:5000
    env_file:
      - .env
    depends_on:
      mongodb:
        condition: service_healthy
      mlflow:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-s", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 20s
      retries: 15
      start_period: 60s
    networks:
      - app_network

  mongodb:
    image: mongo:latest
    container_name: mongodb
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    healthcheck:
      test: ["CMD", "mongo", "--eval", 'db.runCommand("ping").ok']
      interval: 15s
      timeout: 10s
      retries: 5
      start_period: 10s
    networks:
      - app_network

  mlflow:
    build:
      context: .
      dockerfile: Dockerfile.mlflow
    container_name: mlflow
    ports:
      - "5000:5000"
    environment:
      - MLFLOW_ARTIFACT_ROOT=/mlflow
      - MLFLOW_SQLITE_DB=/mlflow/mlflow.db
    volumes:
      - mlflow_data:/mlflow
    healthcheck:
      test: ["CMD", "curl", "-s", "-f", "http://localhost:5000"]
      interval: 15s
      timeout: 10s
      retries: 5
      start_period: 10s
    networks:
      - app_network

volumes:
  mongodb_data:
  mlflow_data:

networks:
  app_network:
    driver: bridge


# version: "3.8"
# services:
#   fastapi:
#     build: .
#     container_name: fastapi_app
#     ports:
#       - "8000:8000"
#     environment:
#       - MONGO_URI=mongodb://mongodb:27017
#     env_file:
#       - .env
#     depends_on:
#       mongodb:
#         condition: service_healthy
#     healthcheck:
#       test: ["CMD", "curl", "-s", "-f", "http://localhost:8000/health"]
#       interval: 15s # Increased interval
#       timeout: 10s # Increased timeout
#       retries: 10 # Increased retries
#       start_period: 30s # Added start period to give FastAPI more time to start
#     networks:
#       - app_network

#   mongodb:
#     image: mongo:latest
#     container_name: mongodb
#     ports:
#       - "27017:27017"
#     volumes:
#       - mongodb_data:/data/db
#     healthcheck:
#       test: ["CMD", "mongo", "--eval", 'db.runCommand("ping").ok']
#       interval: 15s # Increased interval
#       timeout: 10s # Increased timeout
#       retries: 5
#       start_period: 10s # Added start period for MongoDB
#     networks:
#       - app_network

# volumes:
#   mongodb_data:

# networks:
#   app_network:
#     driver: bridge
